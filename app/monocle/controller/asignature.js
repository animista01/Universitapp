// Generated by CoffeeScript 1.6.3
var AsignatureCtrl,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

AsignatureCtrl = (function(_super) {
  var newOne, showAsignatures, updateDelete,
    _this = this;

  __extends(AsignatureCtrl, _super);

  AsignatureCtrl.prototype.events = {
    "tap a[data-action=save]": "onSave"
  };

  AsignatureCtrl.prototype.elements = {
    "#txtMateria": "asignatura",
    "#txtSemestre": "semestre",
    "#txtSalon": "salon"
  };

  function AsignatureCtrl() {
    this.bindAsignatureCreate = __bind(this.bindAsignatureCreate, this);
    AsignatureCtrl.__super__.constructor.apply(this, arguments);
    __Model.Asignature.bind("create", this.bindAsignatureCreate);
  }

  AsignatureCtrl.prototype.bindAsignatureCreate = function() {
    $$('#ulAsignatures').html('');
    return Lungo.Data.Sql.select('asignatures', '', newOne);
  };

  newOne = function(asig) {
    var asignature, breaks, date, i, idAsig, last, view, _i;
    asignature = {
      data: asig
    };
    last = asig[asig.length - 1];
    idAsig = last.id;
    view = new __View.Asignature({
      model: asignature
    });
    view.append(asignature);
    date = moment().format("dddd, MMMM Do, YYYY");
    for (i = _i = 1; _i < 4; i = ++_i) {
      breaks = {
        "break": i,
        asignature_id: idAsig,
        date: date,
        date: date
      };
      Lungo.Data.Sql.insert('breaks', breaks);
    }
    return Lungo.Router.back();
  };

  AsignatureCtrl.prototype.initialize = function() {
    Lungo.Notification.show();
    return Lungo.Data.Sql.select('asignatures', '', showAsignatures);
  };

  showAsignatures = function(results) {
    var asignature, view;
    asignature = {
      data: results
    };
    view = new __View.Asignature({
      model: asignature
    });
    view.append(asignature);
    return Lungo.Notification.hide();
  };

  AsignatureCtrl.prototype.onSave = function() {
    var asignature;
    if (this.asignatura.val() && this.semestre.val() && this.salon.val()) {
      Lungo.Notification.show();
      asignature = {
        name: this.asignatura.val(),
        semester: this.semestre.val(),
        room: this.salon.val()
      };
      Lungo.Data.Sql.insert('asignatures', asignature);
      __Model.Asignature.create({
        name: this.asignatura.val(),
        semester: this.semestre.val(),
        room: this.salon.val()
      });
      this.asignatura.val("");
      this.semestre.val("");
      this.salon.val("");
      return Lungo.Notification.hide();
    } else {
      return Lungo.Notification.error("Por favor llene todos los campos", "Para guardar una nueva asignatura necesitas llenar todos los campos correctamente", "remove-circle", 5);
    }
  };

  AsignatureCtrl.prototype.deleteAsig = function(id) {
    Lungo.Data.Sql.drop('asignatures', {
      id: id
    });
    Lungo.Data.Sql.drop('breaks', {
      asignature_id: id
    });
    Lungo.Data.Sql.drop('scores', {
      asignature_id: id
    });
    return Lungo.Data.Sql.select('asignatures', '', updateDelete);
  };

  updateDelete = function(asig) {
    var asignature, view;
    Lungo.Notification.show();
    asignature = {
      data: asig
    };
    $$('#ulAsignatures').html('');
    view = new __View.Asignature({
      model: asignature
    });
    view.append(asignature);
    return Lungo.Notification.hide();
  };

  return AsignatureCtrl;

}).call(this, Monocle.Controller);

__Controller.Asignature = new AsignatureCtrl("section#sect_anotherAsig");
