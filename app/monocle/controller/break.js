// Generated by CoffeeScript 1.6.3
var BreakCtrl,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

BreakCtrl = (function(_super) {
  var idAsig, idBreak, loadRecords, newOne, showBreaks,
    _this = this;

  __extends(BreakCtrl, _super);

  BreakCtrl.prototype.elements = {
    "#txtBreak": "break",
    "#txtScore": "score",
    "#art_anotherScore select": "type",
    "#txtPriBreak": "primerBreak",
    "#txtSeconBreak": "segundoBreak",
    "#txtThiBreak": "tercerBreak"
  };

  BreakCtrl.prototype.events = {
    "tap a[data-action=saveBreak]": "onSave",
    "tap a[data-action=saveScore]": "onSaveScore",
    "tap a[data-action=saveConfigBreak]": "onSaveBreakConfig",
    "tap a#aLoadRecord": "onLoadRecord"
  };

  idAsig = '';

  idBreak = '';

  function BreakCtrl() {
    this.bindScoreCreate = __bind(this.bindScoreCreate, this);
    this.bindBreakCreate = __bind(this.bindBreakCreate, this);
    BreakCtrl.__super__.constructor.apply(this, arguments);
    __Model.Breaks.bind("create", this.bindBreakCreate);
    __Model.Score.bind("create", this.bindScoreCreate);
  }

  BreakCtrl.prototype.bindBreakCreate = function() {
    return Lungo.Data.Sql.select('breaks', {
      asignature_id: idAsig
    }, newOne);
  };

  newOne = function(datos) {
    var breaks, view;
    $$('article#art_breaks ul').html('');
    breaks = {
      data: datos
    };
    view = new __View.Breaks({
      model: breaks
    });
    view.append(breaks);
    return Lungo.Router.section('sect_breaks');
  };

  BreakCtrl.prototype.bindScoreCreate = function(yay) {};

  BreakCtrl.prototype.getBreaks = function(id) {
    Lungo.Notification.show();
    $$('article#art_breaks ul').html('');
    idAsig = id;
    return Lungo.Data.Sql.select('breaks', {
      asignature_id: idAsig
    }, showBreaks);
  };

  showBreaks = function(results) {
    var breaks, view;
    Lungo.Router.article('sect_breaks', 'art_breaks');
    breaks = {
      data: results
    };
    view = new __View.Breaks({
      model: breaks
    });
    view.append(breaks);
    return Lungo.Notification.hide();
  };

  BreakCtrl.prototype.onSave = function() {
    var date, theBreak;
    Lungo.Notification.show();
    if (this["break"].val()) {
      date = moment().format("dddd, MMMM Do, YYYY");
      theBreak = {
        "break": this["break"].val(),
        asignature_id: idAsig,
        date: date,
        date: date
      };
      Lungo.Data.Sql.insert('breaks', theBreak);
      __Model.Breaks.create({
        "break": this["break"].val()
      });
      this["break"].val('');
    } else {
      Lungo.Notification.error("Por favor llene el campo", "remove-circle", 3);
    }
    return Lungo.Notification.hide();
  };

  BreakCtrl.prototype.getViewScore = function(idbreak) {
    idBreak = idbreak;
    return Lungo.Router.section('sect_newScore');
  };

  BreakCtrl.prototype.onSaveScore = function() {
    var date, theScore, type;
    Lungo.Notification.show();
    type = this.type[0].value;
    if (this.score.val()) {
      date = moment().format("dddd, MMMM Do, YYYY");
      theScore = {
        score: this.score.val(),
        type: type,
        "break": idBreak,
        asignature_id: idAsig,
        date: date,
        date: date
      };
      Lungo.Data.Sql.insert('scores', theScore);
      __Model.Score.create({
        score: this.score.val()
      });
      this.score.val('');
      Lungo.Router.section('sect_breaks');
    } else {
      Lungo.Notification.error("Por favor llene el campo", "remove-circle", 3);
    }
    return Lungo.Notification.hide();
  };

  BreakCtrl.prototype.onSaveBreakConfig = function() {
    var configBreak;
    Lungo.Notification.show();
    if (this.primerBreak.val() && this.segundoBreak.val() && this.tercerBreak.val()) {
      configBreak = {
        firstBreak: this.primerBreak.val(),
        secondBreak: this.segundoBreak.val(),
        thirdBreak: this.tercerBreak.val()
      };
      Lungo.Data.Storage.persistent("configBreaks", configBreak);
      $$('#liBreakConfig').remove();
      Lungo.Router.section('main');
    } else {
      Lungo.Notification.error("Por favor llene el campo", "remove-circle", 3);
    }
    return Lungo.Notification.hide();
  };

  BreakCtrl.prototype.onLoadRecord = function() {
    $$('section#sect_record article ul').html('');
    return Lungo.Data.Sql.select('scores', {
      asignature_id: idAsig
    }, loadRecords);
  };

  loadRecords = function(datos) {
    var record, view;
    Lungo.Router.section('sect_record');
    record = {
      data: datos
    };
    if (Object.keys(datos).length === 0) {

    } else {
      view = new __View.Record({
        model: record
      });
      view.append(record);
    }
    return Lungo.Notification.hide();
  };

  return BreakCtrl;

}).call(this, Monocle.Controller);

__Controller.Break = new BreakCtrl("section#sect_breaks");

__Controller.Break = new BreakCtrl("section#sect_newBreak");

__Controller.Break = new BreakCtrl("section#sect_newScore");

__Controller.Break = new BreakCtrl("section#sect_config");

__Controller.Break = new BreakCtrl("section#sect_record");
