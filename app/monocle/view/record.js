// Generated by CoffeeScript 1.6.3
var _ref,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

__View.Record = (function(_super) {
  __extends(Record, _super);

  function Record() {
    _ref = Record.__super__.constructor.apply(this, arguments);
    return _ref;
  }

  Record.prototype.container = "section#sect_record article ul";

  Record.prototype.template = "{{#data}}\n	<li class=\"liId\" id=\"{{id}}\">\n		<div class=\"right\">\n		            	{{type}}\n		            	<a href=\"#\">\n		            		<span class=\"icon edit\"></span>\n		            	</a>\n		            </div>\n		            </div>\n		<small>Corte # {{break}}</small>\n		<input type=\"hidden\" value=\"{{asignature_id}}\" />\n		<strong>Nota {{score}}</strong>\n	</li>\n{{/data}}";

  Record.prototype.events = {
    "tap article#art_breaks ul li.liId": "onTap"
  };

  Record.prototype.onTap = function(e) {
    var id;
    id = e.currentTarget.id;
    return __Controller.Break.getViewScore(id)();
  };

  return Record;

})(Monocle.View);
